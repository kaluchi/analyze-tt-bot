# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è

# –ï—Å–ª–∏ –º–µ—à–∞–µ—Ç - —Ç–æ –æ—Ç–∫–ª—é—á–∞–µ–º BuildKit —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –≤ 0
$env:DOCKER_BUILDKIT=1

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
function Write-Status {
    param ([string]$Message)
    Write-Host ""
    Write-Host "üöÄ $Message" -ForegroundColor Cyan
    Write-Host "===============================================" -ForegroundColor DarkCyan
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤
if (-not (Test-Path ".\temp")) {
    New-Item -Path ".\temp" -ItemType Directory | Out-Null
}
if (-not (Test-Path ".\temp\test-results")) {
    New-Item -Path ".\temp\test-results" -ItemType Directory | Out-Null
}
if (-not (Test-Path ".\temp\logs")) {
    New-Item -Path ".\temp\logs" -ItemType Directory | Out-Null
}

# –°–±–æ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞
Write-Status "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤"
docker build -f Dockerfile .

Write-Status "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
Write-Host "–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—Ä–∞–∑—ã:" -ForegroundColor Green
docker images | Where-Object { $_ -match 'analyze-tt-bot' }

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É
Write-Host ""
Write-Host "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:" -ForegroundColor Yellow
Write-Host "docker run --rm -e TELEGRAM_BOT_TOKEN=your_token -t analyze-tt-bot"

Write-Host ""
Write-Host "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤:" -ForegroundColor Yellow
Write-Host "docker run --rm -t analyze-tt-bot-test"