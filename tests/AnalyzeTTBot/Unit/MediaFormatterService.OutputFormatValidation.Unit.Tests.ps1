#Requires -Version 5.1
#Requires -Modules @{ ModuleName = 'Pester'; ModuleVersion = '5.0.0' }

<#
.SYNOPSIS
    –¢–µ—Å—Ç—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—ã–≤–æ–¥–∞ —Å–µ—Ä–≤–∏—Å–∞ MediaFormatterService.
.DESCRIPTION
    –ú–æ–¥—É–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—ã–≤–æ–¥–∞ —Å–µ—Ä–≤–∏—Å–∞ MediaFormatterService.
.NOTES
    –ê–≤—Ç–æ—Ä: TikTok Bot Team
    –í–µ—Ä—Å–∏—è: 1.0.0
    –î–∞—Ç–∞: 21.04.2025
#>

Describe "MediaFormatterService.OutputFormatValidation Tests" {
    BeforeAll {
        # –ë–µ–∑ —ç—Ç–æ–π —Å—Ç—Ä–æ—á–∫–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–≤–∞–ª–∏–≤–∞–ª—Å—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–∏–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª—è PSFramework
        # –°–≤—è–∑–∞–Ω–æ —Å —Ç–µ–º —á—Ç–æ –≤ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è, –∑–∞–≤–∏—Å—è—â–µ–≥–æ –æ—Ç PSFramework, –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –æ—à–∏–±–∫–∞ "Cannot bind argument to parameter 'Path' because it is null."
        # —Ç.–∫. –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–∞ –∏–∑ –≤–∞–∂–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∞ –∏–º–µ–Ω–Ω–æ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è ProgramData
        # –°—Ç—Ä–æ—á–∫–∞ –Ω–∏–∂–µ —É—Å—Ç—Ä–∞–Ω—è–µ—Ç —ç—Ç—É –æ—à–∏–±–∫—É
        $Env:ProgramData = $Env:ProgramData -or [Environment]::GetFolderPath("CommonApplicationData")

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å
        $projectRoot = Resolve-Path (Join-Path $PSScriptRoot "..\..\..")
        $manifestPath = Join-Path $projectRoot "src\AnalyzeTTBot\AnalyzeTTBot.psd1"
        if (-not (Test-Path $manifestPath)) {
            throw "–ú–æ–¥—É–ª—å AnalyzeTTBot.psd1 –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $manifestPath"
        }
        Import-Module -Name $manifestPath -Force -ErrorAction Stop
        if (-not (Get-Module -Name AnalyzeTTBot)) {
            throw "–ú–æ–¥—É–ª—å AnalyzeTTBot –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞"
        }
        if (-not (Get-Module -ListAvailable -Name PSFramework)) {
            throw "–ú–æ–¥—É–ª—å PSFramework –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å –ø–æ–º–æ—â—å—é: Install-Module -Name PSFramework -Scope CurrentUser"
        }
        
        # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        $helperPath = Join-Path $PSScriptRoot "..\Helpers\TestResponseHelper.psm1"
        if (Test-Path $helperPath) {
            Import-Module -Name $helperPath -Force -ErrorAction Stop
        }
    }

    Context "Format Requirements" {
        It "Should maintain specific format according to requirements" {
            InModuleScope -ModuleName AnalyzeTTBot {
                # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
                $mediaFormatterService = New-Object -TypeName MediaFormatterService
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
                $mediaInfo = New-SuccessResponse -Data @{
                    FileSize = 1005 * 1KB # –û–∫–æ–ª–æ 1005 KiB
                    FileSizeMB = 0.98
                    Duration = "14.651"
                    DurationFormatted = "14 s 651 ms"
                    Width = 1080
                    Height = 1440
                    AspectRatio = "1080:1440"
                    FPS = 60
                    VideoCodec = "HEVC"
                    VideoBitRate = 487000
                    VideoBitRateFormatted = "487 kbps"
                    HasAudio = $true
                    AudioCodec = "AAC"
                    AudioChannels = 2
                    AudioBitRate = 64100
                    AudioBitRateFormatted = "64.1 kbps"
                    AudioSampleRate = 44100
                    AudioSampleRateFormatted = "44.1 kHz"
                }
                
                # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
                $authorUsername = "nopowerb"
                $videoUrl = "https://vm.tiktok.com/ZMBfhPX7E/"
                $fullVideoUrl = "https://www.tiktok.com/@nopowerb/video/7486440806862032144"
                
                # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥
                $result = $mediaFormatterService.FormatMediaInfo($mediaInfo, $authorUsername, $videoUrl, $fullVideoUrl, "", "")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
                $result.Success | Should -BeTrue
                $result.Data | Should -Match "üîó Link:"
                $result.Data | Should -Match "üë§ Author:"
                $result.Data | Should -Match "üé¨ VIDEO"
                $result.Data | Should -Match "Resolution: 1080 x 1440"
                $result.Data | Should -Match "FPS: 60"
                $result.Data | Should -Match "Codec: HEVC"
                $result.Data | Should -Match "üìÅ General information:"
                $result.Data | Should -Match "Duration:"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
                $result.Data | Should -Not -Match "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑"
                $result.Data | Should -Not -Match "–ê–≤—Ç–æ—Ä:"
                $result.Data | Should -Not -Match "–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ:"
                $result.Data | Should -Not -Match "–ß–∞—Å—Ç–æ—Ç–∞ –∫–∞–¥—Ä–æ–≤:"
                $result.Data | Should -Not -Match "–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ:"
            }
        }
        
        It "Should have correctly grouped sections separated by empty lines" {
            InModuleScope -ModuleName AnalyzeTTBot {
                # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
                $mediaFormatterService = New-Object -TypeName MediaFormatterService
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
                $mediaInfo = New-SuccessResponse -Data @{
                    FileSize = 653 * 1KB
                    FileSizeMB = 0.638
                    Duration = "6.385"
                    Width = 1080
                    Height = 1920
                    AspectRatio = "1080:1920"
                    FPS = 30
                    VideoCodec = "HEVC"
                    VideoBitRate = 765000
                    VideoBitRateFormatted = "765 kbps"
                    HasAudio = $true
                    AudioCodec = "AAC"
                    AudioChannels = 2
                    AudioBitRate = 64000
                    AudioBitRateFormatted = "64 kbps"
                    AudioSampleRate = 44100
                    AudioSampleRateFormatted = "44.1 kHz"
                }
                
                $authorUsername = "olafflee"
                $videoUrl = "https://vm.tiktok.com/ZMBskEM99/"
                $fullVideoUrl = "https://www.tiktok.com/@olafflee/video/7493548584726727958?_t=ZM-8vcptHBnUcH&_r=1"
                
                # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥
                $result = $mediaFormatterService.FormatMediaInfo($mediaInfo, $authorUsername, $videoUrl, $fullVideoUrl, "", "")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ 4 –≥—Ä—É–ø–ø, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—É—Å—Ç—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏
                $resultLines = $result.Data -split "`n"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é –≥—Ä—É–ø–ø—É - —Å—Å—ã–ª–∫–∞ –∏ –∞–≤—Ç–æ—Ä
                $resultLines[0] | Should -Match "üîó Link:"
                $resultLines[1] | Should -Match "üë§ Author:"
                $resultLines[2] | Should -BeNullOrEmpty  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –≥—Ä—É–ø–ø—ã
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ç–æ—Ä—É—é –≥—Ä—É–ø–ø—É - Video
                $resultLines[3] | Should -Match "üé¨ VIDEO"
                $resultLines[4] | Should -Match "Resolution:"
                $resultLines[5] | Should -Match "FPS:"
                $resultLines[6] | Should -Match "Bitrate:"
                $resultLines[7] | Should -Match "Codec:"
                $resultLines[8] | Should -BeNullOrEmpty  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–π –≥—Ä—É–ø–ø—ã
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ—Ç—å—é –≥—Ä—É–ø–ø—É - Audio
                $resultLines[9] | Should -Match "üîä AUDIO"
                $resultLines[10] | Should -Match "Format:"
                $resultLines[11] | Should -Match "Bitrate:"
                $resultLines[12] | Should -Match "Channels:"
                $resultLines[13] | Should -Match "Sampling Rate:"
                $resultLines[14] | Should -BeNullOrEmpty  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ—Å–ª–µ —Ç—Ä–µ—Ç—å–µ–π –≥—Ä—É–ø–ø—ã
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ç–≤–µ—Ä—Ç—É—é –≥—Ä—É–ø–ø—É - General information
                $resultLines[15] | Should -Match "üìÅ General information:"
                $resultLines[16] | Should -Match "Duration:"
                $resultLines[17] | Should -Match "File Size:"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–ª—é—á–µ–π –≤ –æ—Ç—á–µ—Ç–µ
                $result.Data | Should -Match "üîó Link:"
                $result.Data | Should -Match "üë§ Author:"
                $result.Data | Should -Match "üé¨ VIDEO"
                $result.Data | Should -Match "Resolution:"
                $result.Data | Should -Match "FPS:"
                $result.Data | Should -Match "Bitrate:"
                $result.Data | Should -Match "Codec:"
                $result.Data | Should -Match "üîä AUDIO"
                $result.Data | Should -Match "Format:"
                $result.Data | Should -Match "Channels:"
                $result.Data | Should -Match "Sampling Rate:"
                $result.Data | Should -Match "üìÅ General information:"
                $result.Data | Should -Match "Duration:"
                $result.Data | Should -Match "File Size:"
            }
        }
    }

    AfterAll {
        # –í—ã–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤
        Remove-Module -Name AnalyzeTTBot -Force -ErrorAction SilentlyContinue
        if (Get-Module -Name TestResponseHelper) {
            Remove-Module -Name TestResponseHelper -Force -ErrorAction SilentlyContinue
        }
    }
}